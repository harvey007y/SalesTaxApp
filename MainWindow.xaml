<Window x:Class="SalesTaxApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:dg="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:local="clr-namespace:SalesTaxApp"       
        mc:Ignorable="d"
        Title="Sales Tax" SizeToContent="Width" MinHeight="600px">
    <Window.Resources>

        <!-- TextBox style which displays validation errors as a tooltip -->
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- style to apply to DataGridTextColumn in edit mode  -->
        <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- A Row Style which renders a different validation error indicator -->
        <Style x:Key="RowStyle" TargetType="{x:Type dg:DataGridRow}">
            <Setter Property="ValidationErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Ellipse Width="12" Height="12" Fill="Red" Stroke="Black" StrokeThickness="0.5"/>
                            <TextBlock FontWeight="Bold" Padding="4,0,0,0" Margin="0" VerticalAlignment="Top" Foreground="White" Text="!"
                                       ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dg:DataGridRow}},
                                                         Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RowStyleWithAlternation" TargetType="dg:DataGridRow">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Background" Value="GhostWhite"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="ContextMenu" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FFD0D0E0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F9F99F"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#F9F99F" />
                </Trigger>
                <Trigger Property="Validation.HasError" Value="True" >
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Red" ShadowDepth="0" BlurRadius="20" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="Foreground" Value="Blue" />
                    <Setter Property="FontSize" Value="12" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF6B8E95" Offset="0"/>
            <GradientStop Color="#FF14A7C1" Offset="1"/>
            <GradientStop Color="#FF1E424E" Offset="0.509"/>
            <GradientStop Color="#FF1D4855" Offset="0.542"/>
            <GradientStop Color="#FF1D4855" Offset="0.542"/>
            <GradientStop Color="#FF193A44" Offset="0.526"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HeaderBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#FF1D1D1D" Offset="0.614"/>
            <GradientStop Color="#FF007F96" Offset="0.853"/>
            <GradientStop Color="#FF0AEAFA" Offset="1"/>
        </LinearGradientBrush>

        <Style x:Key="HeaderStyle" TargetType="dg:DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource HeaderBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="Cursor" Value="Hand" />
        </Style>


    </Window.Resources>
    <Grid>
        <ScrollViewer  VerticalAlignment="Top" HorizontalScrollBarVisibility="Auto">
            <StackPanel x:Name="stackPanelPrintArea">
                <dg:DataGrid x:Name="dataGrid" Margin="0,24,0,0" 
                             ColumnHeaderStyle="{StaticResource HeaderStyle}"
                             AlternationCount="2"
                             RowStyle="{StaticResource RowStyleWithAlternation}"
                             AutoGenerateColumns="False" 
                             CanUserAddRows="True" 
                             CanUserDeleteRows="True" 
                             UnloadingRow="dataGrid_UnloadingRow"      
                             SourceUpdated="dataGrid_SourceUpdated" ItemsSource="{Binding}">

                    <dg:DataGrid.Columns>
                        <dg:DataGridTextColumn Binding="{Binding Description, ValidatesOnExceptions=True}" Header="Description" Width="175" EditingElementStyle="{StaticResource CellEditStyle}"  />
                        <dg:DataGridTextColumn Binding="{Binding Price, StringFormat=C2, ValidatesOnExceptions=True}" Header="Price" Width="70"  EditingElementStyle="{StaticResource CellEditStyle}" />
                        <dg:DataGridTextColumn Binding="{Binding Quantity,Mode=TwoWay, UpdateSourceTrigger=LostFocus,NotifyOnSourceUpdated=True, ValidatesOnExceptions=True}" Header="Quantity" Width="70" EditingElementStyle="{StaticResource CellEditStyle}"  />
                        <dg:DataGridTemplateColumn Header="IsBook"  Width="70">
                            <dg:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsBook,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}" HorizontalAlignment="Center"  />
                                </DataTemplate>
                            </dg:DataGridTemplateColumn.CellTemplate>
                        </dg:DataGridTemplateColumn>

                        <dg:DataGridTemplateColumn Header="IsFood"  Width="70">
                            <dg:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsFood,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}" HorizontalAlignment="Center"  />
                                </DataTemplate>
                            </dg:DataGridTemplateColumn.CellTemplate>
                        </dg:DataGridTemplateColumn>

                        <dg:DataGridTemplateColumn Header="IsMedical" Width="70">
                            <dg:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsMedical,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}" HorizontalAlignment="Center"  />
                                </DataTemplate>
                            </dg:DataGridTemplateColumn.CellTemplate>
                        </dg:DataGridTemplateColumn>

                        <dg:DataGridTemplateColumn Header="IsImported" Width="70">
                            <dg:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsImported,UpdateSourceTrigger=PropertyChanged,NotifyOnSourceUpdated=True}" HorizontalAlignment="Center"  />
                                </DataTemplate>
                            </dg:DataGridTemplateColumn.CellTemplate>
                        </dg:DataGridTemplateColumn>

                        <dg:DataGridTextColumn Binding="{Binding BasePrice,  StringFormat=C2}" Header="Base Price" Width="70" IsReadOnly="True">
                            <dg:DataGridTextColumn.CellStyle>
                                <Style TargetType="dg:DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                                            <Setter Property="IsTabStop" Value="False"></Setter>
                                            <Setter Property="Focusable" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </dg:DataGridTextColumn.CellStyle>
                        </dg:DataGridTextColumn>
                        <dg:DataGridTextColumn Binding="{Binding Tax,  StringFormat=C2,NotifyOnSourceUpdated=True}" Header="Tax" Width="70" IsReadOnly="True">
                            <dg:DataGridTextColumn.CellStyle>
                                <Style TargetType="dg:DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                                            <Setter Property="IsTabStop" Value="False"></Setter>
                                            <Setter Property="Focusable" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </dg:DataGridTextColumn.CellStyle>
                        </dg:DataGridTextColumn>
                        <dg:DataGridTextColumn Binding="{Binding TotalPrice, StringFormat=C2}" Header="TotalPrice" Width="70" IsReadOnly="True">
                            <dg:DataGridTextColumn.CellStyle>
                                <Style TargetType="dg:DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                                            <Setter Property="IsTabStop" Value="False"></Setter>
                                            <Setter Property="Focusable" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </dg:DataGridTextColumn.CellStyle>
                        </dg:DataGridTextColumn>
                    </dg:DataGrid.Columns>


                </dg:DataGrid>
                <StackPanel HorizontalAlignment="Left" Orientation="Vertical">
                    <Label x:Name="lblSumTax" FontWeight="Bold" />
                    <Label x:Name="lblSumTotalPrice" FontWeight="Bold" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        <Button x:Name="btnPrint"   Content="Print Receipt" HorizontalAlignment="Left" Margin="2,2,0,0" VerticalAlignment="Top" Click="btnPrint_Click" Foreground="White">
            <Button.Background>
                <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#FF6B8E95" Offset="0"/>
                    <GradientStop Color="#FF14A7C1" Offset="1"/>
                    <GradientStop Color="#FF1E424E" Offset="0.509"/>
                    <GradientStop Color="#FF1D4855" Offset="0.542"/>
                    <GradientStop Color="#FF1D4855" Offset="0.542"/>
                    <GradientStop Color="#FF193A44" Offset="0.526"/>
                </LinearGradientBrush>


            </Button.Background>
            <Button.BorderBrush>
                <LinearGradientBrush  StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#FF1D1D1D" Offset="0.614"/>
                    <GradientStop Color="#FF007F96" Offset="0.853"/>
                    <GradientStop Color="#FF0AEAFA" Offset="1"/>
                </LinearGradientBrush>
            </Button.BorderBrush>
        </Button>

    </Grid>
</Window>
